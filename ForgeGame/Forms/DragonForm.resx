<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>